module top_module(
    input clk,
    input reset,
    input ena,
    output pm,
    output [7:0] hh,
    output [7:0] mm,
    output [7:0] ss); 
    
    reg [2:0] ena_hms;
    assign ena_hms = {((ena==1) && (mm == 8'h59) && (ss == 8'h59)),((ena ==1) && (ss == 8'h59)),ena};
    
    counter60 countss(
        .clk(clk),
        .reset(reset),
        .ena(ena_hms[0]),
        .q(ss)
                   );
    
     counter60 countmm(
        .clk(clk),
         .reset(reset),
         .ena(ena_hms[1]),
         .q(mm)
                   );

     
    always@(posedge clk)begin
        if(reset)
            begin
            pm=0;
            hh=8'h12;
            end
        
         else begin
            if(ena_hms[2] && (mm == 8'h59) && (ss == 8'h59)) begin   
                if(hh == 8'h12)  hh <= 8'h1;  
            	else if(hh == 8'h11) begin  
            		hh[3:0] <= hh[3:0] + 1'h1; 
               		pm <= ~pm;
                end 
                else begin
                    if(hh[3:0] == 4'h9) begin
                        hh[3:0] <= 4'h0;
                        hh[7:4] <= hh[7:4] + 1'h1;
                    end
                    else hh[3:0] = hh[3:0] + 1'h1;
                end
            end
            else hh <= hh;
        end
    end
            
            
        

endmodule
            
            
module counter60(
               input clk,
               input reset,
               input ena,
               output [7:0]q
             );
    always@(posedge clk)begin
        if(reset)  q[7:0]<=8'h0;
        else begin
            if(ena)begin
                if(q[3:0]==4'h9)begin
                    if(q[7:4]==4'h5)
                        q<=8'h0;
                    else begin
                        q[3:0]<=0;
                        q[7:4]<=q[7:4]+1'h1;
                         end
                end
                else
                    q[3:0]<=q[3:0]+8'h1;
            end
            else
                q<=q;
        end
    end
endmodule
                    
           